# - Try to find OGRE
# Once done, this will define
#
#  OGRE_FOUND - system has OGRE
#  OGRE_INCLUDE_DIRS - the OGRE include directories 
#  OGRE_LIBRARIES - link these to use OGRE
#
#  OGRE_PCZ_FOUND - Ogre's PCZ SceneManager is available
#  OGRE_PCZ_INCLUDE_DIRS - the PCZ include directories
#  OGRE_PCZ_LIBRARIES - link these to use PCZ
#  OGRE_PCZ_OCTREE_FOUND - Ogre's PCZ SceneManager OctreeZone is available
#  OGRE_PCZ_OCTREE_INCLUDE_DIRS 
#  OGRE_PCZ_OCTREE_LIBRARIES - link these to use the PCZ OctreeZone
#
#  OGRE_CEGUI_FOUND - system has the CEGUI Ogre renderer
#  OGRE_CEGUI_INCLUDE_DIRS - include dirs for the renderer
#  OGRE_CEGUI_LIBRARIES - link these to use the CEGUI Ogre renderer

include(FindPkgMacros)
findpkg_begin(OGRE)

set(OGRE_LIBRARY_NAMES OgreMain)
get_debug_names(OGRE_LIBRARY_NAMES)

# try to locate package
use_pkgconfig(OGRE_PKGC OGRE)
findpkg_config(OGRE)

# hardcoded guess primarily for windows
set(OGRE_INC_SEARCH_PATH $ENV{OGRE_HOME}/include)
set(OGRE_LIB_SEARCH_PATH $ENV{OGRE_HOME}/lib)

find_path(OGRE_INCLUDE_DIR NAMES Ogre.h PATHS ${OGRE_INC_SEARCH_PATH} ${OGRE_CMAKE_INCLUDE_DIRS} ${OGRE_PKGC_INCLUDE_DIRS} PATH_SUFFIXES "OGRE")
find_library(OGRE_LIBRARY_REL NAMES ${OGRE_LIBRARY_NAMES} PATHS ${OGRE_LIB_SEARCH_PATH} ${OGRE_CMAKE_LIBRARY_DIRS} ${OGRE_PKGC_LIBRARY_DIRS})
find_library(OGRE_LIBRARY_DBG NAMES ${OGRE_LIBRARY_NAMES_DBG} PATHS ${OGRE_LIB_SEARCH_PATH} ${OGRE_CMAKE_LIBRARY_DIRS} ${OGRE_PKGC_LIBRARY_DIRS})
make_library_set(OGRE_LIBRARY)

findpkg_finish(OGRE)
add_parent_dir(OGRE_INCLUDE_DIRS OGRE_INCLUDE_DIR)

if (NOT OGRE_FOUND)
  return()
endif ()

# the plugins have no prefix, temporarily disable
set(TMP_CMAKE_LIB_PREFIX ${CMAKE_FIND_LIBRARY_PREFIXES})
set(CMAKE_FIND_LIBRARY_PREFIXES "")

# look for PCZ Scene Manager
set(OGRE_PCZ_LIBRARY_NAMES Plugin_PCZSceneManager PCZSceneManager OgrePCZSceneManager)
get_debug_names(OGRE_PCZ_LIBRARY_NAMES)
find_path(OGRE_PCZ_INCLUDE_DIR NAMES OgrePCZSceneManager.h PATHS ${OGRE_INCLUDE_DIRS} ${OGRE_INC_SEARCH_PATH} ${OGRE_CMAKE_INCLUDE_DIRS} ${OGRE_PKGC_INCLUDE_DIRS} PATH_SUFFIXES PCZ OGRE/PCZ)
find_library(OGRE_PCZ_LIBRARY_REL NAMES ${OGRE_PCZ_LIBRARY_NAMES} PATHS ${OGRE_LIB_SEARCH_PATH} ${OGRE_CMAKE_LIBRARY_DIRS} ${OGRE_PKGC_LIBRARY_DIRS} PATH_SUFFIXES OGRE opt)
find_library(OGRE_PCZ_LIBRARY_DBG NAMES ${OGRE_PCZ_LIBRARY_NAMES_DBG} PATHS ${OGRE_LIB_SEARCH_PATH} ${OGRE_CMAKE_LIBRARY_DIRS} ${OGRE_PKGC_LIBRARY_DIRS} PATH_SUFFIXES OGRE opt)
make_library_set(OGRE_PCZ_LIBRARY)
if (OGRE_PCZ_INCLUDE_DIR AND OGRE_PCZ_LIBRARY)
  set(OGRE_PCZ_FOUND TRUE)
  set(OGRE_PCZ_INCLUDE_DIRS ${OGRE_PCZ_INCLUDE_DIR})
  set(OGRE_PCZ_LIBRARIES ${OGRE_PCZ_LIBRARY})
endif()

# look for PCZ  OctreeZone
if (OGRE_PCZ_FOUND)
  set(OGRE_PCZ_OCTREE_LIBRARY_NAMES Plugin_OctreeZone PCZOctreeZone OgrePCZOctreeZone OgreOctreeZone)
  get_debug_names(OGRE_PCZ_OCTREE_LIBRARY_NAMES)
  find_path(OGRE_PCZ_OCTREE_INCLUDE_DIR NAMES OgreOctreeZone.h PATHS ${OGRE_INCLUDE_DIRS} ${OGRE_INC_SEARCH_PATH}   ${OGRE_CMAKE_INCLUDE_DIRS} ${OGRE_PKGC_INCLUDE_DIRS} PATH_SUFFIXES PCZ OGRE/PCZ)
  find_library(OGRE_PCZ_OCTREE_LIBRARY_REL NAMES ${OGRE_PCZ_OCTREE_LIBRARY_NAMES} PATHS ${OGRE_LIB_SEARCH_PATH} ${OGRE_CMAKE_LIBRARY_DIRS} ${OGRE_PKGC_LIBRARY_DIRS} PATH_SUFFIXES OGRE opt)
  find_library(OGRE_PCZ_OCTREE_LIBRARY_DBG NAMES ${OGRE_PCZ_OCTREE_LIBRARY_NAMES_DBG} PATHS ${OGRE_LIB_SEARCH_PATH} ${OGRE_CMAKE_LIBRARY_DIRS} ${OGRE_PKGC_LIBRARY_DIRS} PATH_SUFFIXES OGRE opt)
  make_library_set(OGRE_PCZ_OCTREE_LIBRARY)
  if (OGRE_PCZ_OCTREE_INCLUDE_DIR AND OGRE_PCZ_OCTREE_LIBRARY)
    set(OGRE_PCZ_OCTREE_FOUND TRUE)
    set(OGRE_PCZ_OCTREE_INCLUDE_DIRS ${OGRE_PCZ_OCTREE_INCLUDE_DIR})
    set(OGRE_PCZ_OCTREE_LIBRARIES ${OGRE_PCZ_OCTREE_LIBRARY})
  endif()
endif()

if (TMP_CMAKE_LIB_PREFIX)
  set(CMAKE_FIND_LIBRARY_PREFIXES ${TMP_CMAKE_LIB_PREFIX})
endif ()

# look for CEGUI Ogre Renderer
find_package(CEGUI QUIET)
if (CEGUI_FOUND)
  get_filename_component(CEGUI_LIBRARY_DIR_REL ${CEGUI_LIBRARY_REL} PATH)
  get_filename_component(CEGUI_LIBRARY_DIR_DBG ${CEGUI_LIBRARY_DBG} PATH)
  find_path(OGRE_CEGUI_INCLUDE_DIR NAMES OgreCEGUIRenderer.h PATHS ${OGRE_INCLUDE_DIRS} ${CEGUI_INCLUDE_DIRS} PATH_SUFFIXES OGRE CEGUI)
  set(OGRE_CEGUI_LIBRARY_NAMES CEGUIOgreRenderer OgreCEGUIRenderer OgreGUIRenderer)
  get_debug_names(OGRE_CEGUI_LIBRARY_NAMES)
  find_library(OGRE_CEGUI_LIBRARY_REL NAMES ${OGRE_CEGUI_LIBRARY_NAMES} PATHS ${OGRE_LIB_SEARCH_PATH} ${OGRE_CMAKE_LIBRARY_DIRS} ${OGRE_PKGC_LIBRARY_DIRS} ${CEGUI_LIBRARY_DIR_REL}) 
  find_library(OGRE_CEGUI_LIBRARY_DBG NAMES ${OGRE_CEGUI_LIBRARY_NAMES_DBG} PATHS ${OGRE_LIB_SEARCH_PATH} ${OGRE_CMAKE_LIBRARY_DIRS} ${OGRE_PKGC_LIBRARY_DIRS} ${CEGUI_LIBRARY_DIR_DBG}) 
  make_library_set(OGRE_CEGUI_LIBRARY)
  
  if (OGRE_CEGUI_INCLUDE_DIR AND OGRE_CEGUI_LIBRARY)
    set(OGRE_CEGUI_FOUND TRUE)
	set(OGRE_CEGUI_INCLUDE_DIRS ${OGRE_CEGUI_INCLUDE_DIR})
	set(OGRE_CEGUI_LIBRARIES ${OGRE_CEGUI_LIBRARY})
  endif()
endif ()

mark_as_advanced(OGRE_PCZ_INCLUDE_DIR OGRE_PCZ_LIBRARY_REL OGRE_PCZ_LIBRARY_DBG 
  OGRE_PCZ_OCTREE_INCLUDE_DIR OGRE_PCZ_OCTREE_LIBRARY_REL OGRE_PCZ_OCTREE_LIBRARY_DBG
  OGRE_CEGUI_INCLUDE_DIR OGRE_CEGUI_LIBRARY_REL OGRE_CEGUI_LIBRARY_DBG
)
