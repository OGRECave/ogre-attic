!!ARBfp1.0
# ARB_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.1.0003, build date Jul  7 2003  12:21:41
# command line args: -entry specular_fp -profile arbfp1
#vendor NVIDIA Corporation
#version 1.0.02
#profile arbfp1
#program specular_fp
#semantic specular_fp.lightDiffuse
#semantic specular_fp.lightSpecular
#semantic specular_fp.normalMap
#semantic specular_fp.normalCubeMap
#semantic specular_fp.normalCubeMap2
#var float2 uv : $vin.TEXCOORD0 : TEXCOORD0 : 0 : 1
#var float3 TSlightDir : $vin.TEXCOORD1 : TEXCOORD1 : 1 : 1
#var float3 TShalfAngle : $vin.TEXCOORD2 : TEXCOORD2 : 2 : 1
#var float4 colour : $vout.COLOR : COLOR : 3 : 1
#var float4 lightDiffuse :  : c[0] : 4 : 1
#var float4 lightSpecular :  : c[1] : 5 : 1
#var sampler2D normalMap :  : texunit 0 : 6 : 1
#var samplerCUBE normalCubeMap :  : texunit 1 : 7 : 1
#var samplerCUBE normalCubeMap2 :  : texunit 2 : 8 : 1
PARAM u0 = program.local[0];
PARAM u1 = program.local[1];
PARAM c0 = {2, 0.5, 0, 0};
TEMP R0;
TEMP R1;
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
TEX R1.xyz, fragment.texcoord[2], texture[2], CUBE;
ADD R1.xyz, R1, -c0.y;
ADD R0.xyz, R0, -c0.y;
MUL R0.xyz, R0, c0.x;
MUL R1.xyz, R1, c0.x;
DP3 R0.w, R0, R1;
MUL R0.w, R0.w, R0.w;
TEX R1.xyz, fragment.texcoord[1], texture[1], CUBE;
ADD R1.xyz, R1, -c0.y;
MUL R1.xyz, R1, c0.x;
DP3 R0.x, R0, R1;
MUL R0.w, R0.w, R0.w;
MUL R0.w, R0.w, R0.w;
MUL R1, u1, R0.w;
MAD result.color, u0, R0.x, R1;
END
# 16 instructions, 2 R-regs, 0 H-regs.
# End of program
