
This file contains a list of todo items for the PCZSceneManager plugin.
Some items are specific, some are not, it's just a list to keep notes for myself.

TODO:
-------------
* PCZSM needs new functions for destroyLight() and hasLight() because the PCZSM has new light type definition.
* potential crash in your PCZSeneManager.cpp line 518, the home_zone->removeNode call basically. removeNode() called twice causing crash? 
  (well i might be wrong but i tink there's a
potential crash in your PCZSeneManager.cpp line 518ff,
the home_zone->removeNode call basically.

This will remove the node from the zone's list, but doesn't
reflect that in the node.

a few lines later, pczsn->setHomeZone(0) does the same thing over again, now crashing because it's trying to erase from the list (and
the erase mechanism doesn't catch the element not being in the list) )
* Add functions to give access to the zonemap (or make it public)
* Encapsulate Portal creation in PCZSceneManager function.
* Test function to prevent scenenodes from crossing portals which they won't fit through
* More testing 

NEED TESTING:
-----------------
* zone::_findNodes() (Scene Query) functions 

OPTIMIZATIONS (todo):
---------------------
* Change PlaneList in PCZFrustum to use vector instead of list. (get rid of constant
  memory allocations/deallocations).
* Only update light zones affected list when portals move or lights move
* change save node old spatial so nodes do it automatically when their spatial
  data changes.  (currently, PCZscenemanager just does it for ALL nodes whether
  they have moved or not)
* OctreeZone - utilize octree when determining portal visibility (currently does 
  separate check not accelerated by octree) for both cameras and light frustums).
* Add scissor rects for portals which are fully visible (i.e. all 4 sides)
* TerrainZoneRenderable has a function for intersecting segments.  Maybe (?) able to
  use my Ogre::Segment class instead of Ray?

FUTURE FEATURES:
----------------
* Add anti-portals?

