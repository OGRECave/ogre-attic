
// Shadow Caster __________________________________________________


vertex_program PlaneOptimalShadows/ShadowCasterVP/Cg cg
{
    source planeoptimalshadowcastervp.cg
    entry_point main
    profiles arbvp1 vs_2_0

    default_params
    {
        param_named_auto uModelViewProjection worldviewproj_matrix
    }
}

fragment_program PlaneOptimalShadows/ShadowCasterFP/Cg cg
{
    source planeoptimalshadowcasterfp.cg
    entry_point main
    profiles arbfp1 ps_2_0

    default_params
    {
        param_named      uDepthOffset float       1.0
        param_named      uSTexWidth float         1024.0
        param_named      uSTexHeight float        1024.0
        param_named_auto uInvModelViewProjection  inverse_worldviewproj_matrix
        param_named_auto uProjection              projection_matrix
    }
}

vertex_program PlaneOptimalShadows/ShadowCasterVP/GLSL glsl
{
    source planeoptimalshadowcastervp.vert

    default_params
    {
        param_named_auto uModelViewProjection worldviewproj_matrix
    }
}

fragment_program PlaneOptimalShadows/ShadowCasterFP/GLSL glsl
{
    source planeoptimalshadowcasterfp.frag

    default_params
    {
        param_named      uDepthOffset float       1.0
        param_named      uSTexWidth float         1024.0
        param_named      uSTexHeight float        1024.0
        param_named_auto uInvModelViewProjection  inverse_worldviewproj_matrix
        param_named_auto uProjection              projection_matrix
    }
}


material PlaneOptimalShadows/ShadowCaster
{
    technique glsl
    {
        // Z-write only pass
        pass Z-write
        {
            vertex_program_ref PlaneOptimalShadows/ShadowCasterVP/GLSL
            {
            }
            fragment_program_ref PlaneOptimalShadows/ShadowCasterFP/GLSL
            {
            }
        }
    }

    technique cg
    {
        // Z-write only pass
        pass Z-write
        {
            //Instead of using depth_bias, we'll be implementing it manually

            vertex_program_ref PlaneOptimalShadows/ShadowCasterVP/Cg
            {
            }
            fragment_program_ref PlaneOptimalShadows/ShadowCasterFP/Cg
            {
            }
        }
    }
}



// Shadow Receiver ________________________________________________

vertex_program PlaneOptimalShadows/ShadowReceiverVP/Cg cg
{
    source planeoptimalshadowreceivervp.cg
    entry_point main
    profiles arbvp1 vs_2_0

    default_params
    {
        param_named_auto uModelViewProjection   worldviewproj_matrix
        param_named_auto uLightPosition         light_position_object_space 0
        param_named_auto uModel                 world_matrix
        param_named_auto uTextureViewProjection texture_viewproj_matrix
    }
}

fragment_program PlaneOptimalShadows/ShadowReceiverFP/Cg cg
{
    source planeoptimalshadowreceiverfp.cg
    entry_point main
    profiles arbfp1 ps_2_x

    default_params
    {
        //param_named uSTexWidth  float 1024.0
        //param_named uSTexHeight float 1024.0
    }
}

vertex_program PlaneOptimalShadows/ShadowReceiverVP/GLSL glsl
{
    source planeoptimalshadowreceiver.vert
    
    default_params
    {
        param_named_auto uModelViewProjection   worldviewproj_matrix
        param_named_auto uLightPosition         light_position_object_space 0
        param_named_auto uModel                 world_matrix
        param_named_auto uTextureViewProjection texture_viewproj_matrix
    }
}

fragment_program PlaneOptimalShadows/ShadowReceiverFP/GLSL glsl
{
    source planeoptimalshadowreceiver.frag

    default_params
    {
        param_named uSTexWidth  float 1024.0
        param_named uSTexHeight float 1024.0
    }
}


material PlaneOptimalShadows/ShadowReceiver
{
    technique glsl
    {
        pass lighting
        {
            vertex_program_ref PlaneOptimalShadows/ShadowReceiverVP/GLSL
            {
            }

            fragment_program_ref PlaneOptimalShadows/ShadowReceiverFP/GLSL
            {
                param_named uShadowMap int 0
            }

            texture_unit ShadowMap
            {
                tex_address_mode clamp
                filtering none
            }
        }
    }


	technique cg
    {
        pass lighting
        {
            vertex_program_ref PlaneOptimalShadows/ShadowReceiverVP/Cg
            {
            }

            fragment_program_ref PlaneOptimalShadows/ShadowReceiverFP/Cg
            {
            }

            // we won't rely on hardware specific filtering of z-tests
            texture_unit ShadowMap
            {
                tex_address_mode clamp
                filtering none
            }
        }
    }
}
